<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template name="createNote" xmlns="http://ws.apache.org/ns/synapse">
    <!--Required Parameters-->
    <parameter name="bodyMessage" description="Content of the note in HTML."/>
    <parameter name="ticketId" description="Unique value of ticket."/>
    <!--Supported Parameters-->
    <parameter name="incoming"
               description="Set to true if a particular note should appear as being created from outside."/>
    <parameter name="notifyEmails"
               description="Email addresses of agents/users who need to be notified about this note."/>
    <parameter name="private" description="Set to true if the note is private."/>
    <parameter name="userId" description="ID of the agent/user who is adding the note."/>
    <sequence>
        <property name="uri.var.bodyMessage" expression="$func:bodyMessage"/>
        <property name="uri.var.ticketId" expression="$func:ticketId"/>
        <property name="uri.var.incoming" expression="$func:incoming"/>
        <property name="uri.var.notifyEmails" expression="$func:notifyEmails"/>
        <property name="uri.var.private" expression="$func:private"/>
        <property name="uri.var.userId" expression="$func:userId"/>
        <script language="js">
            <![CDATA[
                //request body param variables
                var bodyMessage = mc.getProperty('uri.var.bodyMessage');
                var incoming = mc.getProperty('uri.var.incoming');
                var notifyEmails = mc.getProperty('uri.var.notifyEmails');
                var private = mc.getProperty('uri.var.private');
                var userId = mc.getProperty('uri.var.userId');
                var query='{';
                if (bodyMessage != null && bodyMessage != "") {
                   query = query.concat('"'+'body":"' + bodyMessage+'",');
                }
                if (notifyEmails != null && notifyEmails != "" && notifyEmails!="[]") {
                    var notifyEmailsArray=eval( "('" + notifyEmails + "')" );
                    query = query.concat('"notify_emails":' + notifyEmailsArray +',');
                }
                if (incoming != null && incoming != "") {
                   query = query.concat('"'+'incoming":' + incoming+',');
                }
                if (private != null && private != "") {
                   query = query.concat('"'+'private":' + private+',');
                }
                if (userId != null && userId != "") {
                    query = query.concat('"'+'user_id":' + userId+',');
                }
                query=query.substring(0, query.length-1);
                mc.setProperty('uri.var.query', query);
            ]]>
        </script>
        <payloadFactory media-type="json">
            <format>
                $1}
            </format>
            <args>
                <arg expression="$ctx:uri.var.query"/>
            </args>
        </payloadFactory>
        <filter source="$ctx:freshdeskBlocking" regex="true">
            <then>
                <call blocking="true">
                    <endpoint>
                        <http method="post"
                              uri-template="{uri.var.apiUrl}/api/v2/tickets/{+uri.var.ticketId}/notes"/>
                    </endpoint>
                </call>
            </then>
            <else>
                <call>
                    <endpoint>
                        <http method="post"
                              uri-template="{uri.var.apiUrl}/api/v2/tickets/{+uri.var.ticketId}/notes"/>
                    </endpoint>
                </call>
            </else>
        </filter>
        <!-- Remove response custom header information -->
        <header name="X-Runtime" scope="transport" action="remove"/>
        <header name="X-Powered-By" scope="transport" action="remove"/>
        <header name="ETag" scope="transport" action="remove"/>
    </sequence>
</template>