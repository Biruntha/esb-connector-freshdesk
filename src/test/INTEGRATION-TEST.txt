Product: Integration tests for WSO2 ESB Fresh Desk connector

   Pre-requisites:

    - Maven 3.x
    - Java 1.6 or above
    - The org.wso2.esb.integration.integration-base project is required. The test suite has been configured to download this project automatically. If the automatic download fails, download the following project and compile it using the mvn clean install command to update your local repository:
      https://github.com/wso2-extensions/esb-integration-base

    Tested Platforms: 

    - Microsoft WINDOWS V-7
    - Ubuntu 13.04
    - WSO2 ESB 5.0.0
 
Steps to follow in setting integration test.
 1.  Download ESB 5.0.0 from official website.
 2.  Deploy relevant patches, if applicable.

STEPS:

01) Follow the below mentioned steps to create a new FreshDesk account:

    i)   Navigate to the following url and create a fresh account in Freshdesk: http://freshdesk.com/signup
         (Provide the following: Name, Email (should be valid), Company, Domain - <preferred name>.freshdesk.com and phone no)
    ii)  After a while an activation link would be sent to the email that was provided in step i). Click on the activation link to activate your freshdesk account.
         (You will be automatically taken to a link where you'll be asked to provide a password. Provide one and keep it for further use)
    iii) Login to the API. Follow: https://<domain>.freshdesk.com/support/login
    iv)  Once you've logged in: Click on your profile picture on the top right corner of your portal -> Go to Profile settings Page -> Your API key will be available below the change password section to your right. Save it for further use.
    v) Create a new category by providing values for the required fields: Name.. by going https://wso2yasho.freshdesk.com/admin/business_calendars/new and click on the New Cateory button.
    vi) Create a new BusinessHour by providing values for the required fields: Name.. by going https://<domain>.freshdesk.com/discussions/categories and click on the New Business Hour button.
    vii) Create a new Product by providing values for the required fields: Product Name.. by going https://<domain>.freshdesk.com/admin/products and click on the New Product button.
    viii) Create a new Policy by providing values for the required fields: Name.. by going https://<domain>.freshdesk.com/helpdesk/sla_policies and click on the New SLA Policy button.
    ix) Create a new group by providing values for the required fields: Name, Description.. by going https://<domain>.freshdesk.com/groups and click on the New Group Policy button.
    x) Go to Admin -> Security, and disable 'Secure Connection using SSL'.

03)	Follow the below mentioned steps to add valid certificate to access Freshdesk API over https.

  	 i)   Extract the certificate from browser(Mozilla Firefox) by navigating to https://<domain>.freshdesk.com
   	ii)  Go to new ESB 5.0.0 folder and place the downloaded certificate in both "<ESB_HOME>/repository/resources/security/" and "{FRESHDESK_CONNECTOR_HOME}/src/test/resources/keystores/products/" folders.
   	iii) Navigate to "<ESB_HOME>/repository/resources/security/" using command prompt and execute keytool -importcert -file CERT_FILE_NAME -keystore client-truststore.jks -alias "CERT_NAME" in command line to import freshdesk certificate in to keystore.
   		 Give "wso2carbon" as password. Press "Y" to complete certificate import process.

   		 NOTE : CERT_FILE_NAME is the file name which was extracted from freshdesk. (e.g. DigiCertSHA2HighAssuranceServerCA.crt)
   			    CERT_NAME is an arbitrary name for the certificate. (e.g. freshdesk)

   	iv)  Navigate to "{FRESHDESK_CONNECTOR_HOME}/src/test/resources/keystores/products/" using command prompt and execute keytool -importcert -file CERT_FILE_NAME -keystore wso2carbon.jks -alias "CERT_NAME" in command line to import Shopify certificate in to keystore.
   		Give "wso2carbon" as password.

   		NOTE : CERT_FILE_NAME is the file name which was extracted from freshdesk, change it accordingly. (e.g. DigiCertSHA2HighAssuranceServerCA.crt)
   			   CERT_NAME is an arbitrary name for the certificate. (e.g. freshdesk)

			   
04) Compress modified ESB as wso2esb-5.0.0.zip and copy that zip file in to location "{FRESHDESK_HOME}/repository/".
	
05)	Update the property file freshdesk.properties found in {FRESHDESK_HOME}/src/test/resources/artifacts/ESB/connector/config as follows:
	
    i)     apiUrl             -  API endpoint to which the service calls are made. e.g. https://wso2yasho.freshdesk.com
    ii)    apiKey             -  Use the API key obtained in Step 02)-(iv)
    iii)   email              -  Use any well formatted email (exampleName@exampleDomain.com) that currently doesn't exist as a customer email. 
    iv)    description        -  Any valid String to be used as description when creating.
    v)     source             -  An integer value between 1 and 7  indicating the source through which the ticket is created. Refer http://freshdesk.com/api#ticket
    vi)    priority           -  An integer value between 1 and 4 indicating the priority level of the ticket. Refer http://freshdesk.com/api#ticket
    vii)   status             -  An integer value between 1 and 4 indicating the status of the ticket. Refer http://freshdesk.com/api#ticket
    viii)  name		      -	 Any valid String to be used as name when creating.
    ix)    contactName        -  Any valid String to be used as name when creating.
    x)     companyName        -  Any valid String to be used as name when creating. It has to be unique
    xi)    businessHourId     -  An existing business hour id in the current account.
    xii)   subject            -  Any String value that can be used as the subject of the ticket.
    xiii)  productId	      -  An existing product id in the current account.
    xiv)   policyId   	      -  An existing policy id in the current account.
    xv)    bodyMessage        -  Any valid text to be added to the new note/reply/comment.
    xvi)   predefinedFilter   -  The various filters available are new_and_my_open, watching, spam, deleted.
    xvii)  orderType  	      -  Default sort order type is desc
    xviii) categoryId         -  An existing category id in the current account.
    xix)   phone              -  Any valid phone number
    xx)    twitterId          -  Unique Twitter Id
    xxi)   address            -  Any valid String to be used as address when creating. 
    xxii)  mobile	      -  Any valid mobile number
    xxiii) jobTitle	      - Any valid String to be used as job title when creating.
    xxiv)  language           - Language of the contact. Default language is "en". 
    xxv)   tags		      - Array of Strings
    xxvi)  companyIds	      - Array of company Ids which you already created.
    xxvii) ccEmails           - Array of Valid email addresses.
    xxviii)userId	      - Id of the contact which you already created.
    xxix)  requesterId        - Id of the existing Contact
    xxx)   facebookId         - A valid facebook Id
    xxxi)  type		      - Name of ticket Type
    xxxii) ticketName         - Any valid String to be used as name when creating.
    xxxiii)dueBy	      - Vaild Date Time Value. Greater than creating time.
    xxxiv) emailConfigId      - Id of the existing Contact.
    xxxv)  frDueBy            - Vaild Date Time Value. Greater than creating time.
    xxxvi) groupId            - An existing group id in the current account.
    xxxvii)message	      - Any valid String to be used as message when creating.
    xxxviii)title	      - Any valid String to be used as title when creating.
    xxxix)  sticky	      - A valid Boolean value
    xl)     locked	      - A valid Boolean value
    xli)    include	      - Can be stats or requester
    xlii)   forumType         - An integer value between 1 and 4  indicating the type through which the forum is created. Refer http://developers.freshdesk.com/api/#forum_attributes
    xliii)  forumVisibility   - An integer value between 1 and 4  indicating the visibility through which the forum is created. Refer http://developers.freshdesk.com/api/#forum_attributes
    liv)    forumName	      - Any valid String to be used as name when creating. It should be unique.
    lv)     otherEmails       - Valid Email addresses. It has to be unique.
    lvi)    companyIds        - Array of Company Ids which you are already created in step 2
    lvii)   customFields      - You can create custom fields by following "https://support.freshdesk.com/support/solutions/articles/216553"
06) Navigate to "{FRESHDESK_HOME}" and run the following command.
      $ mvn clean install
	  
